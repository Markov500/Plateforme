// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using plateforme.Data;

#nullable disable

namespace plateforme.Migrations
{
    [DbContext(typeof(plateformeContext))]
    [Migration("20220818175834_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("plateforme.Models.Avertissement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("ModerateurId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MembreId");

                    b.ToTable("Avertissement");
                });

            modelBuilder.Entity("plateforme.Models.Commentaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CommentaireId")
                        .HasColumnType("int");

                    b.Property<int>("ContenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModif")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentaireId");

                    b.HasIndex("ContenuId");

                    b.HasIndex("MembreId");

                    b.ToTable("Commentaire");
                });

            modelBuilder.Entity("plateforme.Models.Contenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Visibilite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MembreId");

                    b.ToTable("Contenu");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Contenu");
                });

            modelBuilder.Entity("plateforme.Models.Departement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomDept")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NomDept")
                        .IsUnique();

                    b.ToTable("Departement");
                });

            modelBuilder.Entity("plateforme.Models.DetailNotif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Lu")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.Property<int>("NoificationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MembreId");

                    b.HasIndex("NoificationId");

                    b.ToTable("DetailNotif");
                });

            modelBuilder.Entity("plateforme.Models.Membre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .HasColumnType("longtext");

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("PhotoProfil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Profil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("DepartementId");

                    b.HasIndex("Mail")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Membre");
                });

            modelBuilder.Entity("plateforme.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("plateforme.Models.Parametre", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Parametre");
                });

            modelBuilder.Entity("plateforme.Models.Ressource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContenuId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomRes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ContenuId");

                    b.ToTable("Ressource");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ressource");
                });

            modelBuilder.Entity("plateforme.Models.Signal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContenuId")
                        .HasColumnType("int");

                    b.Property<int>("MembreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContenuId");

                    b.HasIndex("MembreId");

                    b.ToTable("Signal");
                });

            modelBuilder.Entity("plateforme.Models.Fichier", b =>
                {
                    b.HasBaseType("plateforme.Models.Ressource");

                    b.Property<string>("Chemin")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Fichier");
                });

            modelBuilder.Entity("plateforme.Models.Lien", b =>
                {
                    b.HasBaseType("plateforme.Models.Ressource");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Lien");
                });

            modelBuilder.Entity("plateforme.Models.Publication", b =>
                {
                    b.HasBaseType("plateforme.Models.Contenu");

                    b.Property<DateTime?>("DateDeb")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasDiscriminator().HasValue("Publication");
                });

            modelBuilder.Entity("plateforme.Models.Sujet", b =>
                {
                    b.HasBaseType("plateforme.Models.Contenu");

                    b.Property<bool>("Cloture")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Sujet");
                });

            modelBuilder.Entity("plateforme.Models.Avertissement", b =>
                {
                    b.HasOne("plateforme.Models.Membre", "Membre")
                        .WithMany("Avertissements")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("plateforme.Models.Commentaire", b =>
                {
                    b.HasOne("plateforme.Models.Commentaire", "CommentaireParent")
                        .WithMany("Reponses")
                        .HasForeignKey("CommentaireId");

                    b.HasOne("plateforme.Models.Contenu", "Contenu")
                        .WithMany("Commentaires")
                        .HasForeignKey("ContenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("plateforme.Models.Membre", "Membre")
                        .WithMany()
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentaireParent");

                    b.Navigation("Contenu");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("plateforme.Models.Contenu", b =>
                {
                    b.HasOne("plateforme.Models.Membre", "Membre")
                        .WithMany("Contenus")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("plateforme.Models.DetailNotif", b =>
                {
                    b.HasOne("plateforme.Models.Membre", "Membre")
                        .WithMany("Notifications")
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("plateforme.Models.Notification", "Notification")
                        .WithMany()
                        .HasForeignKey("NoificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membre");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("plateforme.Models.Membre", b =>
                {
                    b.HasOne("plateforme.Models.Departement", "Departement")
                        .WithMany("Membres")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("plateforme.Models.Ressource", b =>
                {
                    b.HasOne("plateforme.Models.Contenu", "Contenu")
                        .WithMany("Ressources")
                        .HasForeignKey("ContenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contenu");
                });

            modelBuilder.Entity("plateforme.Models.Signal", b =>
                {
                    b.HasOne("plateforme.Models.Contenu", "Contenu")
                        .WithMany("Signals")
                        .HasForeignKey("ContenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("plateforme.Models.Membre", "Membre")
                        .WithMany()
                        .HasForeignKey("MembreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contenu");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("plateforme.Models.Commentaire", b =>
                {
                    b.Navigation("Reponses");
                });

            modelBuilder.Entity("plateforme.Models.Contenu", b =>
                {
                    b.Navigation("Commentaires");

                    b.Navigation("Ressources");

                    b.Navigation("Signals");
                });

            modelBuilder.Entity("plateforme.Models.Departement", b =>
                {
                    b.Navigation("Membres");
                });

            modelBuilder.Entity("plateforme.Models.Membre", b =>
                {
                    b.Navigation("Avertissements");

                    b.Navigation("Contenus");

                    b.Navigation("Notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
